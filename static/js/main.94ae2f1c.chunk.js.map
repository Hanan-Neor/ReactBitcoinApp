{"version":3,"sources":["services/async-storage-service.js","services/userService.js","store/actions/userActions.js","cmps/AppHeader.jsx","cmps/MovePreview.jsx","cmps/MoveList.jsx","cmps/TransferFund.jsx","services/contactService2.js","store/actions/contactActions.js","services/bitcoinService.js","pages/ContactDetailsPage.jsx","cmps/ContactFilter.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","pages/HomePage.jsx","pages/StatisticPage.jsx","pages/ContactEditPage.jsx","pages/SignupPage.jsx","pages/BitcoinApp.jsx","App.jsx","reportWebVitals.js","store/reducers/contactReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["storageService","query","get","entityType","entityId","then","entities","find","entity","_id","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","JSON","parse","localStorage","getItem","Promise","resolve","length","text","possible","i","charAt","Math","floor","random","setItem","stringify","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getUsers","username","coins","moves","getById","userId","update","getLoggedinUser","a","user","_saveLocalUser","userCred","users","sessionStorage","removeItem","dispatch","loggedInUser","type","window","_AppHeader","props","toggleMenu","document","querySelector","classList","toggle","closeMenu","contains","this","className","style","exact","to","onClick","activeClassName","Component","mapDispatchToProps","AppHeader","connect","state","userModule","MovePreview","move","withContactName","toId","amount","usdAmount","toLocaleString","currency","minimumFractionDigits","maximumFractionDigits","Date","at","MoveList","title","toggleMovesList","buttonTitle","padding","map","index","TransferFund","onTransferCoins","target","value","handleChange","setState","handleSubmit","event","preventDefault","transferPrecision","onSubmit","autoComplete","htmlFor","id","name","placeholder","onChange","maxCoins","contactService","save","STORAGE_KEY","getEmptyContact","email","phone","gDefaultContacts","_loadContacts","filterBy","contactsToReturn","filter","term","contacts","toLocaleLowerCase","contact","includes","contactToSave","loadContacts","getState","contactModule","deleteContact","contactId","bitcoinService","getRate","getMarketPrice","getConfirmedTransactions","axios","res","data","console","log","_ContactDetailsPage","loadContact","match","params","getMovesToContact","userMoves","movesToContact","goBack","history","getBitcoinRate","bitcoinRate","USD","last","transferAmount","now","moveToSave","addMove","src","alt","width","height","alert","unshift","ContactDetailsPage","ContactFilter","onChangeFilter","ContactPreview","selectContact","ContactList","_ContactPage","setFilterBy","ContactPage","_HomePage","showAll","marketPrice","loadUser","loadMarketPrice","bitcoinRateToShow","values","y","color","strokeWidth","fill","slice","HomePage","StatisticPage","confirmedTransactions","chartData","labels","datasets","label","backgroundColor","borderColor","loadConfirmTransactions","confirmTransactions","margin","x","radius","hoverRadius","borderWidth","_ContactEditPage","onSaveRobot","field","prevState","e","ref","inputRef","ContactEditPage","_SignupPage","signedUp","loggedIn","handleChange2","handleLogin","SignupPage","_BitcoinApp","robots","selectedContactId","page","gotoPage","path","component","BitcoinApp","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94ae2f1c.chunk.js","sourcesContent":["export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    _save,\r\n    _makeId\r\n}\r\n\r\nfunction query(entityType) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return Promise.resolve(entities);\r\n}\r\n\r\nfunction get(entityType, entityId) {\r\n    // console.log(entityId);\r\n    return query(entityType)\r\n        // .then(entities => entities.find(entity => entity.id === entityId))\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity);\r\n            _save(entityType, entities)\r\n            return newEntity;\r\n        })\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(...newEntities);\r\n            _save(entityType, entities)\r\n            return entities;\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id);\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity;\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId);\r\n            // const idx = entities.findIndex(entity => entity.id === entityId);\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n            // return entities\r\n        })\r\n}\r\n\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}","import { storageService } from './async-storage-service.js';\r\n// import { httpService } from './http.service';\r\n// import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser';\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  getLoggedinUser,\r\n};\r\n\r\nwindow.userService = userService;\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n// userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 100})\r\n\r\n// userService.signup({\r\n//   // userService.login({\r\n//   username: \"Avi Berger\",\r\n//   coins: 100,\r\n//   moves: [\r\n//     {\r\n//       toId: '5a56640269f443a5d64b32ca',\r\n//       to: 'Ochoa Hyde',\r\n//       at: Date.now(),\r\n//       amount: 10\r\n//     },\r\n//     {\r\n//       toId: '5a56640269f443a5d64b32ca',\r\n//       to: 'Ochoa Hyde',\r\n//       at: Date.now(),\r\n//       amount: 10\r\n//     },\r\n//     {\r\n//       toId: '5a56640269f443a5d64b32ca',\r\n//       to: 'Ochoa Hyde',\r\n//       at: Date.now(),\r\n//       amount: 10\r\n//     },\r\n//     {\r\n//       toId: '5a5664025f6ae9aa24a99fde',\r\n//       to: 'Hallie Mclean',\r\n//       at: Date.now(),\r\n//       amount: 20\r\n//     },\r\n//   ],\r\n// })\r\n\r\nfunction getUsers() {\r\n  // return storageService.query('user');\r\n  // return httpService.get(`user`)\r\n\r\n  return {\r\n    username: \"Avi Berger\",\r\n    coins: 100,\r\n    moves: [],\r\n  }\r\n}\r\n\r\nasync function getById(userId) {\r\n  const user = await storageService.get('user', userId);\r\n  // const user = await httpService.get(`user/${userId}`)\r\n  gWatchedUser = user;\r\n  return user;\r\n}\r\nfunction remove(userId) {\r\n  return storageService.remove('user', userId);\r\n  // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  await storageService.put('user', user);\r\n  // user = await httpService.put(`user/${user._id}`, user)\r\n  // Handle case in which admin updates other user's details\r\n  if (getLoggedinUser()._id === user._id) _saveLocalUser(user);\r\n  return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n  const users = await storageService.query('user'); //CLIENT STORAGE\r\n  const user = users.find((user) => user.username === userCred.username); //CLIENT STORAGE\r\n  if (!user) return // \r\n  return _saveLocalUser(user); //CLIENT STORAGE\r\n\r\n  // const user = await httpService.post('auth/login', userCred) //SERVER STORAGE\r\n  // socketService.emit('login', user._id); //SERVER STORAGE\r\n  // if (user) return _saveLocalUser(user); //SERVER STORAGE\r\n}\r\nasync function signup(userCred) {\r\n  // let signedup = await storageService.query('user')\r\n  const signedup = await storageService.query('user')\r\n  // if (!signedup || !signedup.length) {\r\n    // signedup = await storageService.post('user', userCred); //CLIENT STORAGE\r\n    const user = await storageService.post('user', userCred); //CLIENT STORAGE\r\n    \r\n    // const user = await httpService.post('auth/signup', userCred)  //SERVER STORAGE\r\n    // socketService.emit('set-user-socket', user._id); //SERVER STORAGE\r\n    // console.log('just signed up', user);\r\n    // const users = await getUsers();\r\n    // console.log('users', users);\r\n    return _saveLocalUser(user);\r\n  // }\r\n  // }else{\r\n  //   return _saveLocalUser(signedup)\r\n  // }\r\n}\r\nasync function logout() {\r\n  sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER);\r\n  // socketService.emit('unset-user-socket'); //SERVER STORAGE\r\n  // return await httpService.post('auth/logout') //SERVER STORAGE\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n  sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user));\r\n  return user;\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n  if (!sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER)) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, 'null');\r\n  }\r\n  return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER));\r\n}\r\n\r\n// // This IIFE functions for Dev purposes\r\n// // It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//   var user = getLoggedinUser();\r\n//   // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//   // Here we are listening to changes for the watched user (comming from other browsers)\r\n//   window.addEventListener('storage', async () => {\r\n//     if (!gWatchedUser) return;\r\n//     const freshUsers = await storageService.query('user');\r\n//     const watchedUser = freshUsers.find((u) => u._id === gWatchedUser._id);\r\n//     if (!watchedUser) return;\r\n//     if (gWatchedUser.score !== watchedUser.score) {\r\n//       console.log(\r\n//         'Watched user score changed - localStorage updated from another browser'\r\n//       );\r\n//       socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser);\r\n//     }\r\n//     gWatchedUser = watchedUser;\r\n//   });\r\n// })();\r\n\r\n// // This is relevant when backend is connected\r\n// (async () => {\r\n//   var user = getLoggedinUser();\r\n//   if (user) socketService.emit('set-user-socket', user._id);\r\n// })();\r\n","import { userService } from \"../../services/userService\";\r\n\r\nexport function getLoggedinUser(){\r\n    return async dispatch => {\r\n        // try{\r\n            const loggedInUser = await userService.getLoggedinUser()\r\n            // console.log(loggedInUser);\r\n            dispatch({type: 'SET_USER' , loggedInUser})\r\n        // } catch(err){\r\n        //     console.log(err);\r\n        // }\r\n    } \r\n}\r\nexport function addMove(move){\r\n// export function addMove(user){\r\n    return async (dispatch , getState) => {\r\n        // try{\r\n            const {loggedInUser} = getState().userModule\r\n            if (loggedInUser.coins < move.amount)return alert('You dont have enough money!')\r\n            loggedInUser.coins -= move.amount\r\n            loggedInUser.moves.unshift(move)\r\n            await userService.update(loggedInUser)\r\n            dispatch({type: 'SET_USER' , loggedInUser})\r\n        // } catch(err){\r\n        //     console.log(err);\r\n        // }\r\n\r\n            // await userService.update(user)\r\n            // dispatch({type: 'SET_USER' , user})\r\n    } \r\n}","import { connect } from \"react-redux\"\r\nimport { NavLink, withRouter } from \"react-router-dom\"\r\nimport { userService } from \"../services/userService\"\r\nimport { getLoggedinUser } from '../store/actions/userActions'\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport class _AppHeader extends Component {\r\n    logout = async () => {\r\n        userService.logout()\r\n        await this.props.getLoggedinUser()\r\n        //    this.props.history.push('/')\r\n        // console.log(this.props);\r\n    }\r\n    toggleMenu = () =>{\r\n            document.querySelector(\".right-side .nav\").classList.toggle('menu-open')\r\n            document.querySelector(\".screen\").classList.toggle('menu-open')\r\n    }\r\n\r\n    closeMenu = () =>{\r\n        if(!document.querySelector(\".right-side .nav\").classList.contains('menu-open')) return\r\n        this.toggleMenu()\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        // if (!user) return (<div>lodaing</div>)\r\n        return (\r\n            <div className=\"app-header flex align-center space-between\">\r\n                <div>\r\n                <NavLink style={{'textDecoration':'none'}} exact to=\"/\">  <h1>Mr.Bitcoin</h1></NavLink>\r\n                </div>\r\n\r\n                <div className=\"right-side flex align-center\">\r\n                    {user?\r\n\r\n                    <>\r\n                    {/* <div>\r\n                        Hello {user.username}!\r\n                    </div> */}\r\n\r\n                    <div className=\"hamburger-button\" onClick={this.toggleMenu}>\r\n                        ≣\r\n                    </div>\r\n\r\n                    <nav className=\"nav flex\">\r\n                        {/* Hello <NavLink activeClassName=\"active-nav\" exact to=\"/\"><div>{user.username}!</div></NavLink> */}\r\n                        <NavLink onClick={this.closeMenu} activeClassName=\"active-nav\" exact to=\"/\"><div>Home</div></NavLink>\r\n                        <NavLink onClick={this.closeMenu} activeClassName=\"active-nav\" to=\"/contact\"><div>Contacts</div></NavLink>\r\n                        <NavLink onClick={this.closeMenu} activeClassName=\"active-nav\" to=\"/stats\"><div>Stats</div></NavLink>\r\n\r\n                    </nav></>\r\n                    :\r\n                    <div>Hello User!</div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// function _AppHeader({user}) {\r\n\r\n\r\n\r\n//     logout = ()=>{\r\n//         userService.logout()\r\n//     }\r\n//     // const {user} = this.props\r\n//     if (!user) return (<div>lodaing</div>)\r\n//     return (\r\n//         <div className=\"app-header flex align-center space-between\">\r\n//             <div>\r\n//                 <h1>Mister Bitcoin</h1>\r\n//             </div>\r\n//             <div className=\"right-side flex\">\r\n\r\n//                 <div>\r\n//                     Hello {user.username}!\r\n//                     <button onClick={this.logout}> Logout</button>\r\n\r\n//                 </div>\r\n//                 <nav className=\"flex\">\r\n//                     <NavLink activeClassName=\"active-nav\" exact to=\"/\"><div>Home</div></NavLink>\r\n//                     <NavLink activeClassName=\"active-nav\" to=\"/contact\"><div>Contacts</div></NavLink>\r\n//                     <NavLink activeClassName=\"active-nav\" to=\"/stats\"><div>Stats</div></NavLink>\r\n\r\n//                 </nav>\r\n//             </div>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport function MovePreview({ move, withContactName }) {\r\n    return (\r\n        <div className=\"move-preview\">\r\n            {/* {JSON.stringify(move)} */}\r\n            {/* {withContactName? `To ${move.to}` : ''} */}\r\n            {withContactName && <>To <Link to={'/contact/' + move.toId}>{move.to}</Link> <br /></>}\r\n            {/* {`To ${move.to}`}<br/> */}\r\n\r\n            <span className=\"bitcoin\">₿ {move.amount}</span> | \r\n            <span className=\"usd\"> {move.usdAmount.toLocaleString('en-US', {style: 'currency',currency: 'USD',minimumFractionDigits: 2,maximumFractionDigits: 2,})}</span> \r\n            <br />\r\n\r\n            {/* // {move.amount.toLocaleString('en-US', {\r\n            //     style: 'currency',\r\n            //     currency: 'USD',\r\n            //     // useGrouping:true,\r\n            //     minimumFractionDigits: 0,\r\n            //     maximumFractionDigits: 0,\r\n            // })} B <br /> */}\r\n\r\n            {/* {new Date(move.at).toLocaleDateString()} */}\r\n            <span className=\"sm-font\">{new Date(move.at).toLocaleString()}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MovePreview } from './MovePreview'\r\n\r\nexport function MoveList({ moves, title, withContactName, toggleMovesList, buttonTitle }) {\r\n\r\n    // if (!moves || moves.length === 0) return (<div>Nothing to show</div>)\r\n    return (\r\n\r\n        // <div>\r\n        //     {JSON.stringify(moves)}\r\n        // </div>\r\n        <div className=\"move-list\">\r\n            <div style={{padding:'5px 10px'}} className=\"flex space-between align-center\">\r\n                <h3>{title}</h3>\r\n                <Link><span className=\"sm-font\" onClick={toggleMovesList} >{buttonTitle}</span></Link>\r\n            </div>\r\n\r\n            {!moves.length && <div className=\"no-moves\">Nothing to show yet..</div>}\r\n\r\n            {moves.map((move, index) => (\r\n                <MovePreview move={move} key={index} withContactName={withContactName} />\r\n                // <MovePreview move={move} key={move.at} withContactName={withContactName}/>\r\n            ))\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class TransferFund extends Component {\r\n\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    onTransferCoins = ({ target }) => {\r\n        // console.log(target.value);\r\n        this.props.onTransferCoins(target.value)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        // this.props.onChangeFilter(target.value)\r\n        // console.log(target.value);\r\n        this.setState({ amount: target.value })\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (!this.state.amount) return\r\n        this.props.onTransferCoins(this.state.amount)\r\n        this.setState({ amount: '' })\r\n    }\r\n\r\n    transferPrecision = () =>{\r\n        return 0.000001\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"transfer-fund\">\r\n                <form className=\"transfer-form flex\" onSubmit={this.handleSubmit} autoComplete=\"off\" >\r\n                    <div>\r\n                        <label htmlFor=\"amount\"></label>\r\n                        <input id=\"amount\" name=\"amount\" type=\"number\" placeholder=\"How much?\" value={this.state.amount} onChange={this.handleChange} name=\"\" min={this.transferPrecision()} max={this.props.maxCoins}\r\n                          step={this.transferPrecision()}  autoComplete=\"off\" />\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"nice-button\">Transfer</button>\r\n                    </div>\r\n                </form>\r\n                {/* {this.state.amount} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { storageService } from './async-storage-service.js';\r\n\r\nexport const contactService = {\r\n  query,\r\n  save,\r\n  remove,\r\n  getById,\r\n  getEmptyContact,\r\n}\r\n\r\nconst STORAGE_KEY = 'contacts'\r\n\r\nconst gDefaultContacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n    \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\"\r\n  }\r\n];\r\n\r\nvar gContacts = _loadContacts()\r\n\r\nasync function query(filterBy) {\r\n  let contactsToReturn = await _loadContacts();\r\n  if (filterBy) {\r\n    contactsToReturn = filter(filterBy,contactsToReturn)\r\n  }\r\n  return contactsToReturn;\r\n}\r\n\r\nfunction filter(term,contacts) {\r\n  term = term.toLocaleLowerCase()\r\n  return contacts.filter(contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\nasync function getById(userId) {\r\n  const user = await storageService.get(STORAGE_KEY, userId);\r\n  // console.log(user);\r\n  return user;\r\n}\r\n\r\n\r\nfunction remove(id) {\r\n  return storageService.remove(STORAGE_KEY, id)\r\n}\r\n\r\nasync function save(contactToSave) {\r\n  // console.log(contactToSave._id);\r\n  if (contactToSave._id) {\r\n    await storageService.put(STORAGE_KEY, contactToSave)\r\n  } else {\r\n    await storageService.post(STORAGE_KEY, contactToSave)\r\n  }\r\n  return ;\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nasync function _loadContacts() {\r\n  let contacts = await storageService.query(STORAGE_KEY)\r\n  if (!contacts || !contacts.length){\r\n    contacts = gDefaultContacts\r\n    storageService.postMany(STORAGE_KEY, contacts)\r\n  } \r\n  return contacts\r\n}\r\n\r\n","import { contactService } from \"../../services/contactService2\"\r\n\r\nexport function loadContacts(){\r\n    return async (dispatch, getState) => {\r\n        let {filterBy,contacts} = getState().contactModule\r\n        // console.log(getState());\r\n        // if(!contacts || !contacts.length){\r\n\r\n             contacts = await contactService.query(filterBy)\r\n        // }\r\n        dispatch({type:'SET_CONTACTS',contacts})\r\n    }\r\n}\r\n\r\nexport function deleteContact(contactId){\r\n    return async dispatch => { \r\n        await contactService.remove(contactId)\r\n        dispatch({type:'DELETE_CONTACT' , contactId})\r\n    }\r\n}\r\n// export function deleteContact(contactId){\r\n//     return async dispatch => { \r\n//         const contacts = await contactService.remove(contactId)\r\n//         console.log(contacts);\r\n//          dispatch({type:'SET_CONTACTS',contacts})\r\n//     }\r\n// }\r\n\r\nexport function setFilterBy(filterBy){\r\n    return dispatch => {\r\n        // console.log(filterBy);\r\n        dispatch({type:'SET_FILTER_BY' , filterBy})\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport const bitcoinService = {\r\n  getRate,\r\n  getMarketPrice,\r\n  getConfirmedTransactions\r\n    \r\n}\r\n\r\nconst STORAGE_KEY = 'bitcoins'\r\n\r\n// var gBitcoins = _loadBitcoins()\r\n\r\n\r\nasync function getRate(){\r\n    try{\r\n        // const res = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1')\r\n        const res = await axios.get('https://blockchain.info/ticker')   // look here for instructions  https://blockchain.info/api/exchange_rates_api\r\n        // console.log(res);\r\n        return res.data\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function getMarketPrice(){\r\n    try{\r\n        const res = await axios.get('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n        // console.log(res);\r\n        return res.data\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\nasync function getConfirmedTransactions() {\r\n    try {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=5months&format=json&cors=true\r\n        `)\r\n        // console.log(res.data);\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { MoveList } from '../cmps/MoveList'\r\nimport { TransferFund } from '../cmps/TransferFund'\r\n// import contactService, {ContactService} from '../services/contactService' \r\nimport { contactService } from '../services/contactService2'\r\nimport { deleteContact, loadContacts } from '../store/actions/contactActions'\r\nimport { addMove } from '../store/actions/userActions'\r\nimport { bitcoinService } from '../services/bitcoinService'\r\n\r\n\r\n\r\nclass _ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null,\r\n        moves: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.props.getLoggedinUser()\r\n\r\n        this.loadContact()\r\n        // console.log(this.props);\r\n\r\n    }\r\n\r\n    loadContact = async () => {\r\n        const { id } = this.props.match.params\r\n        const contact = await contactService.getById(id)\r\n        this.getMovesToContact()\r\n        this.setState({ contact })\r\n    }\r\n\r\n    getMovesToContact = async () => {\r\n        const userMoves = await this.props.loggedInUser.moves\r\n        const movesToContact = userMoves.filter(move => { return move.toId === this.state.contact._id })\r\n        this.setState({ moves: movesToContact })\r\n    }\r\n\r\n    // deleteContact = async () => {\r\n    //     await this.props.deleteContact(this.state.contact._id)\r\n    //     this.props.history.push('/contact')\r\n    // }\r\n\r\n    goBack = () => {\r\n        this.props.history.push('/contact/')\r\n    }\r\n\r\n    getBitcoinRate = async () => {\r\n        const bitcoinRate = await bitcoinService.getRate()\r\n        // const bitcoinUsdRate = bitcoinRate.USD.last\r\n        return bitcoinRate.USD.last\r\n    }\r\n\r\n\r\n    onTransferCoins = async (transferAmount) => {\r\n        // console.log(transferAmount);\r\n        const { contact } = this.state\r\n        const moveToSave = {\r\n            toId: contact._id,\r\n            to: contact.name,\r\n            at: Date.now(),\r\n            amount: transferAmount,\r\n            usdAmount : await this.getBitcoinRate()*transferAmount\r\n        }\r\n\r\n        this.props.addMove(moveToSave)\r\n        // //  const movesToSave = this.state.moves.push(moveToSave)\r\n        // this.setState({moves:  movesToSave})\r\n        this.loadContact()\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        // const { contact } = this.state\r\n        const { contact, moves } = this.state\r\n        // const {loggedInUser} = this.props\r\n        // if (!contact) return <div>wow I am loading</div>\r\n        // if (!contact|| !loggedInUser.moves) return <div>wow I am loading</div>\r\n        if (!contact || !moves) return <div>wow I am loading</div>\r\n        return (\r\n            <div className=\"secondary-layout flex column \">\r\n                <div className=\"back-buttons-bar flex space-between\">\r\n                    <Link>\r\n                        <div onClick={this.goBack}>Back</div>\r\n                    </Link>\r\n                    <Link to={'/contact/edit/' + contact._id} >\r\n                        <div>Edit</div>\r\n                    </Link>\r\n\r\n                </div>\r\n                <div className=\"content-layout contact-details flex column\" >\r\n                    <img className=\"avatar\" src={'https://robohash.org/' + contact._id} alt=\"\" width=\"200\" height=\"200\" />\r\n                    <div className=\"details\">\r\n                        <p className=\"name\"><h1>{contact.name}</h1></p>\r\n                        <p className=\"phone\"><h3>{contact.phone}</h3></p>\r\n                        <p className=\"email\">{contact.email}</p>\r\n                        {/* <p><b>Name: </b>{contact.name}</p>\r\n                        <p><b>Phone: </b>{contact.phone}</p>\r\n                        <p><b>Email: </b>{contact.email}</p> */}\r\n                    </div>\r\n                    {/* <div className=\"buttons\">\r\n                        <button  onClick={this.deleteContact}>Delete</button>\r\n                    </div> */}\r\n                <TransferFund className=\"contact-details\" onTransferCoins={this.onTransferCoins} maxCoins={this.props.loggedInUser.coins}></TransferFund>\r\n                </div>\r\n                {/* {JSON.stringify(loggedInUser.moves)} */}\r\n                {/* <MoveList moves={loggedInUser.moves}></MoveList> */}\r\n                <MoveList moves={moves} title={`Moves History`}></MoveList>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // moves:state.userModule.loggedInUser.moves\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteContact,\r\n    loadContacts,\r\n    addMove\r\n\r\n\r\n    // getLoggedinUser\r\n\r\n}\r\n\r\nexport const ContactDetailsPage = connect(mapStateToProps, mapDispatchToProps)(_ContactDetailsPage)","import  { Component } from 'react'\r\n\r\nexport  class ContactFilter extends Component {\r\n\r\n\r\n    handleChange =({target}) =>{\r\n        this.props.onChangeFilter(target.value)\r\n        // console.log(target.value);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"contact-filter\">\r\n                <form >\r\n                    {/* <label htmlFor=\"text\">Search:</label> */}\r\n                    <input type=\"text\" id=\"text\" onChange={this.handleChange} placeholder={'Search'} autoComplete=\"off\" />\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function ContactPreview({ contact, selectContact }) {\r\n    return (\r\n        // <div className=\"contact-preview\" onClick={() => selectContact(contact._id)}>\r\n        <Link to={'/contact/' + contact._id}>\r\n            <div className=\"contact-preview\">\r\n                {/* hello preview111111111 */}\r\n                <img className=\"avatar\" src={'https://robohash.org/' + contact._id} alt=\"\" width=\"50\" height=\"50\" />\r\n                <div className=\"flex column\">\r\n                    {contact.name}\r\n                {/* <span className=\"phone\">{contact.phone}</span> */}\r\n                </div>\r\n\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","// import React from 'react'\r\nimport { ContactPreview } from './ContactPreview'\r\n\r\nexport function ContactList({contacts , selectContact}) {\r\n    return (\r\n        <div className=\"contact-list\">\r\n      {contacts.map(contact => (\r\n        <ContactPreview  contact={contact} selectContact={selectContact} key={contact._id} />\r\n      ))}\r\n        </div>\r\n    )\r\n}\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { ContactFilter } from '../cmps/ContactFilter'\r\nimport {ContactList} from '../cmps/ContactList'\r\n// import contactService from '../services/contactService'\r\n// import {contactService} from '../services/contactService2'\r\nimport { loadContacts,deleteContact,setFilterBy } from '../store/actions/contactActions'\r\n\r\nclass _ContactPage extends Component {\r\n    state={\r\n        contacts:[],\r\n        filterBy:null\r\n    }\r\n\r\n    componentDidMount(){\r\n    // console.log(this.props);\r\n        // this.loadContacts()\r\n        this.props.setFilterBy('')\r\n        // if(!this.props.contacts){\r\n\r\n            this.props.loadContacts()\r\n        // }\r\n        // console.log(this.props);\r\n    }\r\n\r\n    // async loadContacts(){\r\n    //     const contacts = await contactService.query(this.state.filterBy)\r\n    //     // const contacts = await contactService.getContacts(this.state.filterBy)\r\n    //     this.props.dispatch({type: 'SET_CONTACTS' , contacts})\r\n    //     // this.setState({contacts})\r\n    // }\r\n\r\n   onChangeFilter = (filterBy) => {\r\n    //    console.log('filterBy',filterBy);\r\n    //    this.setState({filterBy}, this.loadContacts)\r\n    this.props.setFilterBy(filterBy)\r\n    this.props.loadContacts()\r\n\r\n   }\r\n\r\n\r\n    render() {\r\n    //   const  {contacts} = this.state\r\n      const  {contacts} = this.props\r\n      const {selectContact} = this.props\r\n      if(!contacts) return <div>Loading Contacts...</div>\r\n        return (\r\n            <div className=\"secondary-layout\">\r\n                <Link to={'/contact/edit'}>\r\n                <button className=\"nice-button\">Add Contact</button>\r\n                </Link> \r\n                <div className=\"\">\r\n\r\n                <ContactFilter onChangeFilter={this.onChangeFilter} />\r\n                </div>\r\n                <div className=\" contact-page\">\r\n\r\n                <ContactList contacts={contacts} selectContact={selectContact}/>\r\n                {/* {JSON.stringify(contacts, null, 2)} */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contacts: state.contactModule.contacts,\r\n        // filterBy: state.contactModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n// loadContacts : loadContacts\r\nloadContacts,\r\ndeleteContact,\r\nsetFilterBy\r\n}\r\nexport const ContactPage = connect(mapStateToProps,mapDispatchToProps)(_ContactPage)\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bitcoinService } from '../services/bitcoinService'\r\nimport { getLoggedinUser } from '../store/actions/userActions'\r\nimport { userService } from '../services/userService'\r\nimport { MoveList } from '../cmps/MoveList'\r\nimport { Link } from 'react-router-dom'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\n\r\n\r\nclass _HomePage extends Component {\r\n    state = {\r\n        showAll:false,\r\n        marketPrice: null,\r\n\r\n        // user: {\r\n        //     name: 'haha'\r\n        // },\r\n        bitcoinRate: null,\r\n        // moves: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser()\r\n        this.loadMarketPrice()\r\n        this.getBitcoinRate()\r\n        console.log(this.props);\r\n        // this.movesToShow()\r\n\r\n    }\r\n\r\n    loadUser = async () => {\r\n        // const user = await userService.getUsers()\r\n        // this.setState({user})\r\n        await this.props.getLoggedinUser()\r\n        if (!this.props.user) this.props.history.push('/signup')\r\n    }\r\n    loadMarketPrice = async () => {\r\n        const marketPrice = await bitcoinService.getMarketPrice()\r\n        this.setState({ marketPrice })\r\n        console.log(marketPrice);\r\n    }\r\n    getBitcoinRate = async () => {\r\n        const bitcoinRate = await bitcoinService.getRate()\r\n        // const bitconToUsd = JSON.parse(bitcoinRate)\r\n        console.log(bitcoinRate.USD.last);\r\n        // this.setState({ bitcoinRate })\r\n        this.setState({ bitcoinRate: bitcoinRate.USD.last })\r\n    }\r\n\r\n    // movesToShow = async () => {\r\n    //     const moves = await this.props.user.moves.slice(0,5)\r\n    //     this.setState({ moves })\r\n\r\n    // }\r\n    logout = async () => {\r\n        userService.logout()\r\n        await this.props.getLoggedinUser()\r\n        this.props.history.push('/signup')\r\n        console.log(this.props);\r\n\r\n    }\r\n\r\n    bitcoinRateToShow = (amount) => {\r\n        // return this.state.bitcoinRate.toLocaleString('en-US', {\r\n        return amount.toLocaleString('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            // useGrouping:true,\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        })\r\n    }\r\n\r\n    toggleMovesList = () => {\r\n        const showAll = !this.state.showAll\r\n        this.setState({showAll})\r\n// alert('hi')\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {showAll} = this.state\r\n        const { marketPrice } = this.state\r\n        const { bitcoinRate } = this.state\r\n        const { user } = this.props\r\n        if (!user) return (<div>lodaing</div>)\r\n        // if (!user ) return this.loadUser()\r\n\r\n        return (\r\n            <div className=\" home-page secondary-layout flex column \">\r\n\r\n                <div className=\"back-buttons-bar flex\">\r\n\r\n                    <Link onClick={this.logout}> Logout</Link>\r\n\r\n                </div>\r\n                <div className=\"content-layout flex column justify-center\">\r\n\r\n                    <h1>Hello {user.username} !</h1>\r\n\r\n                    <div className=\"flex space-between bottom-divider\">\r\n                        <div className=\"left-side\">\r\n                            <div className=\"sm-font\">Current Balance</div>\r\n                            <div>BIT: <span className=\"bitcoin md-font\">₿ {user.coins}</span></div>\r\n                            <div>USD: <span className=\"usd\">{this.bitcoinRateToShow(user.coins * bitcoinRate)}</span></div>\r\n                        </div>\r\n                        <div className=\"right-side\">\r\n                            <div className=\"sm-font\">Current BTC to USD</div>\r\n                            <div className=\"md-font\">{bitcoinRate ? this.bitcoinRateToShow(bitcoinRate) : 'loading'}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    {marketPrice && (<div>\r\n                        <h5 className=\"text-center\">Market Price (last 5 months)</h5>\r\n                        <Sparklines data={marketPrice.values.map(value => value.y)}>\r\n                            <SparklinesLine color=\"orange\" style={{ strokeWidth: \".5\", fill: \"orange\" }} />\r\n                        </Sparklines>\r\n                    </div>)}\r\n\r\n                    {/* <div>{bitcoinRate ? JSON.stringify(bitcoinRate) : 'loading'}</div> */}\r\n\r\n                    {/* {moves? <MoveList moves={moves} title={'Last 5 moves'} withContactName={true}></MoveList> : 'loading'} */}\r\n\r\n\r\n                </div>\r\n\r\n                {/* {marketPrice && (<div>\r\n                        <h4>Market Price (last 5 months)</h4>\r\n                        <Sparklines data={marketPrice.values.map(value => value.y)}>\r\n                            <SparklinesLine color=\"orange\" style={{ strokeWidth: \".5\", fill: \"orange\" }} />\r\n                        </Sparklines>\r\n                    </div>)} */}\r\n\r\n                {!showAll && (<><MoveList moves={user.moves.slice(0, 5)} title={'Last 5 moves'} withContactName={true} toggleMovesList={this.toggleMovesList} buttonTitle={'Show all'}></MoveList></>)}\r\n                {showAll &&(<><MoveList moves={user.moves} title={'All moves'} withContactName={true} toggleMovesList={this.toggleMovesList} buttonTitle={'Show less'}></MoveList></>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\n\r\n\r\n// export const HomePage = connect(mapStateToProps,mapDispatchToProps)(_HomePage)\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import { Component } from 'react'\r\nimport { bitcoinService } from '../services/bitcoinService'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\nimport Chart from 'chart.js/auto';\r\nimport { Bar, Line } from 'react-chartjs-2'\r\n// import { getRelativePosition } from 'chart.js/helpers';\r\n\r\nexport class StatisticPage extends Component {\r\n\r\n    state = {\r\n        marketPrice: null,\r\n        confirmedTransactions: null,\r\n        chartData:{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n            datasets: [{\r\n            label: \"My First dataset\",\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            // data: [0, 10, 5, 2, 20, 30, 45],\r\n            // data: this.state.marketPrice.values.map(value => value.y),\r\n            }]\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadMarketPrice()\r\n        this.loadConfirmTransactions()\r\n\r\n    }\r\n\r\n    loadMarketPrice = async () => {\r\n        const marketPrice = await bitcoinService.getMarketPrice()\r\n        this.setState({ marketPrice })\r\n        console.log(    marketPrice    );\r\n    }\r\n\r\n    loadConfirmTransactions = async () => {\r\n        const confirmTransactions = await bitcoinService.getConfirmedTransactions()\r\n        this.setState({ confirmTransactions })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { marketPrice, confirmTransactions } = this.state\r\n        if (!marketPrice || !confirmTransactions) return <div>loading</div>\r\n        return (\r\n            <div className=\"flex column\" style={{ width: '100%' }}>\r\n                <h1>statistics!</h1>\r\n                <div>\r\n                    <h3>Market Price</h3>\r\n\r\n                    <Sparklines data={marketPrice.values.map(value => value.y)}\r\n                        margin={10}>\r\n                        <SparklinesLine color=\"blue\" style={{ strokeWidth: \".5\", fill: \"none\" }} />\r\n                    </Sparklines>\r\n\r\n                </div>\r\n                {/* {JSON.stringify(marketPrice.values)} */}\r\n\r\n\r\n                <div>\r\n                    <h3>Confirm Transactions</h3>\r\n\r\n                    <Sparklines data={confirmTransactions.values.map(value => value.y)}\r\n                        margin={10}>\r\n                        <SparklinesLine color=\"red\" style={{ strokeWidth: \".5\", }} />\r\n                    </Sparklines>\r\n\r\n                </div>\r\n                {/* {JSON.stringify(confirmTransactions.values)} */}\r\n\r\n\r\n\r\n                < Line\r\n                    // data={this.state.chartData}\r\n                    data={{\r\n                        // labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n                        labels: this.state.marketPrice.values.map(value => new Date(value.x*1000).toLocaleString()),\r\n                        datasets: [{\r\n                            radius:2,\r\n                            hoverRadius:3,\r\n                            borderWidth:1,\r\n                            label: \"Market Price\",\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                            borderColor: 'rgb(255, 99, 132)',\r\n                            // data: [0, 10, 5, 2, 20, 30, 45],\r\n                            // fill:true,\r\n                            data: this.state.marketPrice.values.map(value => value.y),\r\n                            }]\r\n                      }}\r\n                     \r\n                    // options={chartOptions}\r\n                    height={500}\r\n                    width={700}\r\n                />\r\n\r\n                < Line\r\n                    // data={this.state.chartData}\r\n                    data={{\r\n                        // labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n                        labels: this.state.confirmTransactions.values.map(value => new Date(value.x*1000).toLocaleString()),\r\n                        datasets: [{\r\n                            radius:2,\r\n                            hoverRadius:3,\r\n\r\n                            borderWidth:1,\r\n                            label: \"Confirm Transactions\",\r\n                            // backgroundColor: 'rgb(255, 99, 132)',\r\n                            backgroundColor: 'rgb(140, 102, 20)',\r\n                            // borderColor: 'rgb(255, 99, 132)',\r\n                            borderColor: '#F3931C',\r\n                            // data: [0, 10, 5, 2, 20, 30, 45],\r\n                            fill:true,\r\n                            data: this.state.confirmTransactions.values.map(value => value.y),\r\n                            \r\n                            }]\r\n                      }}\r\n                    // options={chartOptions}\r\n                    // height={400}\r\n                    // width={700}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { contactService } from '../services/contactService2'\r\nimport { deleteContact } from '../store/actions/contactActions'\r\n\r\n\r\nclass _ContactEditPage extends Component {\r\n\r\n    state = {\r\n        contact: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const id = this.props.match.params.id\r\n            const contact = id ? await contactService.getById(id) : contactService.getEmptyContact()\r\n            this.setState({ contact })\r\n        } catch (err) {\r\n\r\n        }\r\n    }\r\n    onSaveRobot = async () => {\r\n        const { contact } = this.state\r\n        await contactService.save(contact)\r\n        this.props.history.push('/contact/' + contact._id)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ contact: { ...prevState.contact, [field]: value } }))\r\n    }\r\n\r\n    goBack = () => {\r\n        const { contact } = this.state\r\n        contact._id ? this.props.history.push('/contact/' + contact._id) : this.props.history.push('/contact')\r\n    }\r\n\r\n    deleteContact = async (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.contact._id) return\r\n        await this.props.deleteContact(this.state.contact._id)\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (!this.state.contact) return <div>{'Lodaing...'}</div>\r\n        const { name, email, phone } = this.state.contact\r\n        return (\r\n            <div className=\"secondary-layout \">\r\n\r\n                <div className=\"back-buttons-bar flex space-between\">\r\n                    <Link>\r\n                        <div onClick={this.goBack}>Back</div>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n                <form className=\"content-layout contact-edit\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input ref={this.inputRef} value={name} name=\"name\" type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input value={email} name=\"email\" type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n\r\n                    <label htmlFor=\"phone\">Phone number</label>\r\n                    <input value={phone} name=\"phone\" type=\"text\" id=\"phone\" onChange={this.handleChange} />\r\n\r\n                    <div className=\"buttons\">\r\n                        <button className=\"nice-button\" onClick={this.onSaveRobot}>Save</button>\r\n                        {this.state.contact._id && <button className=\"simple-button\" onClick={this.deleteContact}>Delete Contact</button>}\r\n                    </div>\r\n\r\n                    {/* <p>{this.state.errMsg}</p> */}\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteContact,\r\n}\r\n\r\nexport const ContactEditPage = connect(mapStateToProps, mapDispatchToProps)(_ContactEditPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userService } from '../services/userService';\r\nimport { getLoggedinUser } from '../store/actions/userActions'\r\n\r\n\r\nclass _SignupPage extends Component {\r\n    state = {\r\n        signedUp: {\r\n            username: null,\r\n            coins: 100,\r\n            moves: [],\r\n        },\r\n        loggedIn:{\r\n            username:null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        // this.props.onChangeFilter(target.value)\r\n        // console.log(target.value);\r\n        // this.setState({ 'signedUp.name': target.value })\r\n\r\n\r\n\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({signedUp: { ...prevState.signedUp, [field]:value}}))\r\n    \r\n\r\n    }\r\n\r\n    handleChange2 = ({ target }) => {\r\n        // this.props.onChangeFilter(target.value)\r\n        // console.log(target.value);\r\n        // this.setState({ 'signedUp.name': target.value })\r\n\r\n\r\n\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({loggedIn: { ...prevState.loggedIn, [field]:value}}))\r\n    \r\n\r\n    }\r\n\r\n    handleSubmit =async (event) => {\r\n        event.preventDefault()\r\n        // this.setState({name:''})\r\n        // console.log(this.state.signedUp);\r\n        await userService.signup(this.state.signedUp)\r\n        await this.props.getLoggedinUser()\r\n        this.props.history.push('/')\r\n    }\r\n    handleLogin =async (event) => {\r\n        event.preventDefault()\r\n        // this.setState({name:''})\r\n        // console.log(this.state.signedUp);\r\n        await userService.login(this.state.loggedIn)\r\n        await this.props.getLoggedinUser()\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                signup\r\n                <form onSubmit={this.handleSubmit}>\r\n                <input  id=\"username\" name=\"username\" type=\"text\" onChange={this.handleChange} autoComplete=\"off\"/>\r\n                </form>\r\n                </div>\r\n                <div>\r\n\r\n                login\r\n                <form onSubmit={this.handleLogin}>\r\n                <input  id=\"username\" name=\"username\" type=\"text\" onChange={this.handleChange2} autoComplete=\"off\"/>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // user: state.userModule.loggedInUser\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\n\r\n\r\n// export const HomePage = connect(mapStateToProps,mapDispatchToProps)(_HomePage)\r\nexport const SignupPage = connect(mapStateToProps,mapDispatchToProps)(_SignupPage)","import { HashRouter as Router, Redirect, Route , Switch } from 'react-router-dom'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { Component } from 'react'\r\nimport {ContactDetailsPage} from './ContactDetailsPage'\r\nimport { ContactPage } from './ContactPage'\r\nimport { HomePage } from './HomePage'\r\nimport { StatisticPage } from './StatisticPage'\r\nimport { ContactEditPage } from './ContactEditPage'\r\nimport { connect } from 'react-redux'\r\nimport {getLoggedinUser} from '../store/actions/userActions'\r\nimport { SignupPage } from './SignupPage'\r\n// import { RobotList } from '../cmps/RobotList'\r\n// import { RobotDetails } from './RobotDetails'\r\n// import { robotService } from '../services/robotService'\r\n// import { RobotFilter } from '../cmps/RobotFilter'\r\n\r\nclass _BitcoinApp extends Component {\r\n  state = {\r\n    robots: null,\r\n    filterBy: null,\r\n    selectedContactId: null,\r\n    page: 'home'\r\n    // selectedContactId: '5a56640269f443a5d64b32ca'\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props);\r\n    // this.loadRobots()\r\n    this.props.getLoggedinUser()\r\n\r\n  }\r\n\r\n  selectContact = (contactId) => {\r\n    this.setState({ selectedContactId: contactId })\r\n  }\r\n\r\n  gotoPage = (page) => {\r\n    this.setState({ page: page, selectedContactId:null })\r\n  }\r\n\r\n\r\n  // async loadRobots() {\r\n  //   const robots = await robotService.query(this.state.filterBy)\r\n  //   this.setState({ robots })\r\n  // }\r\n\r\n  // selectRobot = (robotId) => {\r\n  //   this.setState({ selectedRobotId: robotId })\r\n  // }\r\n  // onChangeFilter = (filterBy) => {\r\n  //   this.setState({ filterBy }, this.loadRobots)\r\n  // }\r\n\r\n  // deleteRobot = async (robotId) => {\r\n  //   await robotService.remove(robotId)\r\n  //   this.loadRobots()\r\n  // }\r\n  toggleMenu = () =>{\r\n    document.querySelector(\".right-side .nav\").classList.toggle('menu-open')\r\n    document.querySelector(\".screen\").classList.toggle('menu-open')\r\n    // document.body.classList.toggle('menu-open')\r\n  }\r\n\r\n  // swype = (ev) =>{\r\n  //   prevEv = ev\r\n  //   if (ev.x)\r\n  // }\r\n\r\n\r\n  render() {\r\n    const { selectedContactId ,page } = this.state\r\n    // console.log(this.selectContact);\r\n\r\n    // if (!robots) return <div className=\"page-loading-screen\">Loading...</div>\r\n\r\n    return (\r\n      \r\n      <Router>\r\n        <div className=\"screen\" onClick={this.toggleMenu}></div>\r\n            <AppHeader />\r\n          {/* <main   className=\"main-layout flex column align-center\" onTouch={this.toggleMenu}> */}\r\n          <main   className=\"main-layout flex column align-center\">\r\n            <Switch>\r\n              <Route path=\"/signup\" component={SignupPage}></Route>\r\n              <Route path=\"/stats\" component={StatisticPage}></Route>\r\n              <Route path=\"/contact/edit/:id?\" component={ContactEditPage} />\r\n              <Route path=\"/contact/:id\" component={ContactDetailsPage} />\r\n              <Route path=\"/contact\" component={ContactPage}></Route>\r\n              <Route path=\"/\" component={HomePage}></Route>\r\n            </Switch>\r\n\r\n          </main>\r\n\r\n\r\n     </Router>\r\n\r\n      /* <div className=\"flex column app-container\">\r\n        <h1>Mister Bitcoin</h1>\r\n        <nav>\r\n        <a onClick={() => { this.gotoPage('home') }} href=\"#\"> Home</a> |\r\n        <a onClick={() => { this.gotoPage('contactList') }} href=\"#\"> Contacts</a> |\r\n        <a onClick={() => { this.gotoPage('statistics') }} href=\"#\"> Statistics</a> |\r\n\r\n        \r\n        </nav>\r\n\r\n        <main className=\"main-layout\">\r\n        {page === 'home' && <HomePage />}\r\n        {page === 'contactList' && (selectedContactId ? <ContactDetailsPage contactId={selectedContactId} /> : <ContactPage selectContact={this.selectContact} />)}\r\n        {page === 'statistics' && <StatisticPage />}\r\n\r\n        </main>\r\n      </div> */\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return{\r\n      // user: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  getLoggedinUser\r\n}\r\n\r\n\r\n\r\nexport const BitcoinApp = connect(mapStateToProps,mapDispatchToProps)(_BitcoinApp)\r\n// export const BitcoinApp = connect(mapDispatchToProps)(_BitcoinApp)","import { BitcoinApp } from './pages/BitcoinApp';\n\nexport default function App() {\n  return (\n    <main  className=\"app-container flex column\" >\n      <BitcoinApp/>\n    </main>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    contacts :null,\r\n    filterBy: null\r\n}\r\nexport function contactReducer(state = INITIAL_STATE, action){\r\n    switch (action.type) {\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'SET_FILTER_BY':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filterBy,\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                // contacts: state.contacts\r\n                contacts: state.contacts.filter(contact => contact._id !== action.contactId)\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact._id === action.contact._id ? action.contact: contact)\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","const INITIAL_STATE = {\r\n    loggedInUser: null\r\n    // loggedInUser: {\r\n    //     name:\"Avi Berger\",\r\n    //     coins:100,\r\n    //     moves:[],\r\n    // }\r\n}\r\n\r\nexport function userReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        // case 'SPEND_BALANCE':\r\n        //     return{\r\n        //         ...state,\r\n        //         loggedInUser:{\r\n        //             ...state.loggedInUser,\r\n        //             balance: state.loggedInUser.balance - action.amount\r\n\r\n        //         }\r\n        //     }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.loggedInUser\r\n            }\r\n\r\n        case 'UPDATE_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.loggedInUser\r\n                // loggedInUser: {\r\n                //     ...state.loggedInUser,\r\n                //     moves: moves.unshift(action.move),\r\n                //     coins: state.loggedInUser.coins - action.move.amount\r\n                //   }\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { contactReducer } from \"./reducers/contactReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\"\r\nconst composeEnhancers  = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose  //with 2 : '__' at beginning and end\r\nconst rootReducer = combineReducers({\r\n    // contactReducer,\r\n    // userReducer\r\n    contactModule : contactReducer,\r\n    userModule : userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk))) \r\n// export const store = createStore(contactReducer,composeEnhancers(applyMiddleware(thunk))) \r\n// console.log(store.getState());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss'\n\n// import './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}