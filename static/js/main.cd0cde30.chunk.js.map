{"version":3,"sources":["cmps/AppHeader.jsx","services/storageService.js","services/contactService2.js","services/utilService.js","pages/ContactDetailsPage.jsx","cmps/ContactFilter.jsx","cmps/ContactPreview.jsx","cmps/ContactList.jsx","pages/ContactPage.jsx","services/bitcoinService.js","services/userService.js","pages/HomePage.jsx","pages/StatisticPage.jsx","pages/ContactEditPage.jsx","pages/BitcoinApp.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppHeader","className","activeClassName","exact","to","storageService","store","key","value","localStorage","JSON","stringify","load","defaultValue","parse","contactService","query","filterBy","contactsToReturn","gContacts","term","toLocaleLowerCase","filter","contact","name","includes","phone","email","Promise","resolve","save","contactToSave","_id","idx","findIndex","splice","length","text","possible","i","charAt","Math","floor","random","makeId","batteryStatus","push","STORAGE_KEY","remove","id","gDefaultContacts","slice","getById","find","getEmptyContact","tryContact","contacts","_loadContacts","ContactDetailsPage","state","loadContact","a","props","match","params","setState","deleteContact","history","goBack","this","onClick","src","alt","width","height","Component","ContactFilter","handleChange","target","onChangeFilter","console","log","htmlFor","type","onChange","ContactPreview","selectContact","ContactList","map","ContactPage","loadContacts","bitcoinService","getRate","getMarketPrice","getConfirmedTransactions","axios","get","res","data","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getUsers","userId","update","getLoggedinUser","coins","moves","user","put","_saveLocalUser","userCred","users","username","post","sessionStorage","removeItem","setItem","getItem","window","HomePage","bitcoinRate","loadUser","getBitcoinRate","StatisticPage","marketPrice","confirmedTransactions","loadMarketPrice","loadConfirmTransactions","confirmTransactions","style","values","y","margin","color","strokeWidth","fill","ContactEditPage","onSaveRobot","field","prevState","ref","inputRef","BitcoinApp","robots","selectedContactId","page","contactId","gotoPage","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd0cde30.chunk.js","sourcesContent":["import { NavLink , withRouter } from \"react-router-dom\"\r\n\r\nexport function AppHeader() {\r\n    return (\r\n        <div className=\"app-header flex align-center space-between\">\r\n            <div>\r\n                <h1>Mister Bitcoin</h1>\r\n            </div>\r\n            <nav className=\"flex\">\r\n                <NavLink activeClassName=\"active-nav\" exact to=\"/\"><div>Home</div></NavLink>\r\n                <NavLink activeClassName=\"active-nav\" to=\"/contact\"><div>Contacts</div></NavLink>\r\n                <NavLink activeClassName=\"active-nav\" to=\"/stats\"><div>Stats</div></NavLink>\r\n\r\n            </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { storageService } from './storageService.js'\r\nimport { makeId } from './utilService.js'\r\n\r\nexport const contactService = {\r\n  query,\r\n  save,\r\n  remove,\r\n  getById,\r\n  getEmptyContact,\r\n  tryContact\r\n}\r\n\r\nconst STORAGE_KEY = 'contacts'\r\n\r\nconst gDefaultContacts = [\r\n  {\r\n    \"_id\": \"5a56640269f443a5d64b32ca\",\r\n    \"name\": \"Ochoa Hyde\",\r\n    \"email\": \"ochoahyde@renovize.com\",\r\n    \"phone\": \"+1 (968) 593-3824\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\r\n    \"name\": \"Hallie Mclean\",\r\n    \"email\": \"halliemclean@renovize.com\",\r\n    \"phone\": \"+1 (948) 464-2888\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640252d6acddd183d319\",\r\n    \"name\": \"Parsons Norris\",\r\n    \"email\": \"parsonsnorris@renovize.com\",\r\n    \"phone\": \"+1 (958) 502-3495\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\r\n    \"name\": \"Rachel Lowe\",\r\n    \"email\": \"rachellowe@renovize.com\",\r\n    \"phone\": \"+1 (911) 475-2312\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abce24c6bfe4699d\",\r\n    \"name\": \"Dominique Soto\",\r\n    \"email\": \"dominiquesoto@renovize.com\",\r\n    \"phone\": \"+1 (807) 551-3258\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402a6499c1d4da9220a\",\r\n    \"name\": \"Shana Pope\",\r\n    \"email\": \"shanapope@renovize.com\",\r\n    \"phone\": \"+1 (970) 527-3082\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402f90ae30e97f990db\",\r\n    \"name\": \"Faulkner Flores\",\r\n    \"email\": \"faulknerflores@renovize.com\",\r\n    \"phone\": \"+1 (952) 501-2678\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\r\n    \"name\": \"Holder Bean\",\r\n    \"email\": \"holderbean@renovize.com\",\r\n    \"phone\": \"+1 (989) 503-2663\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402e3b846c5f6aec652\",\r\n    \"name\": \"Rosanne Shelton\",\r\n    \"email\": \"rosanneshelton@renovize.com\",\r\n    \"phone\": \"+1 (968) 454-3851\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\r\n    \"name\": \"Pamela Nolan\",\r\n    \"email\": \"pamelanolan@renovize.com\",\r\n    \"phone\": \"+1 (986) 545-2166\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\r\n    \"name\": \"Roy Cantu\",\r\n    \"email\": \"roycantu@renovize.com\",\r\n    \"phone\": \"+1 (929) 571-2295\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\r\n    \"name\": \"Ollie Christian\",\r\n    \"email\": \"olliechristian@renovize.com\",\r\n    \"phone\": \"+1 (977) 419-3550\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\r\n    \"name\": \"Nguyen Walls\",\r\n    \"email\": \"nguyenwalls@renovize.com\",\r\n    \"phone\": \"+1 (963) 471-3181\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298ab77236845b82b\",\r\n\r\n    \"name\": \"Glenna Santana\",\r\n    \"email\": \"glennasantana@renovize.com\",\r\n    \"phone\": \"+1 (860) 467-2376\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640208fba3e8ecb97305\",\r\n    \"name\": \"Malone Clark\",\r\n    \"email\": \"maloneclark@renovize.com\",\r\n    \"phone\": \"+1 (818) 565-2557\"\r\n  },\r\n  {\r\n    \"_id\": \"5a566402abb3146207bc4ec5\",\r\n    \"name\": \"Floyd Rutledge\",\r\n    \"email\": \"floydrutledge@renovize.com\",\r\n    \"phone\": \"+1 (807) 597-3629\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640298500fead8cb1ee5\",\r\n    \"name\": \"Grace James\",\r\n    \"email\": \"gracejames@renovize.com\",\r\n    \"phone\": \"+1 (959) 525-2529\"\r\n  },\r\n  {\r\n    \"_id\": \"5a56640243427b8f8445231e\",\r\n    \"name\": \"Tanner Gates\",\r\n    \"email\": \"tannergates@renovize.com\",\r\n    \"phone\": \"+1 (978) 591-2291\"\r\n  },\r\n  {\r\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\r\n    \"name\": \"Lilly Conner\",\r\n    \"email\": \"lillyconner@renovize.com\",\r\n    \"phone\": \"+1 (842) 587-3812\"\r\n  }\r\n];\r\n\r\nvar gContacts = _loadContacts()\r\n\r\nfunction query(filterBy) {\r\n  let contactsToReturn = gContacts;\r\n  if (filterBy) {\r\n    contactsToReturn = filter(filterBy)\r\n\r\n  }\r\n  return Promise.resolve([...contactsToReturn]);\r\n}\r\n\r\nfunction filter(term) {\r\n  term = term.toLocaleLowerCase()\r\n  return gContacts.filter(contact => {\r\n    return contact.name.toLocaleLowerCase().includes(term) ||\r\n      contact.phone.toLocaleLowerCase().includes(term) ||\r\n      contact.email.toLocaleLowerCase().includes(term)\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\nfunction tryContact(id) {\r\n  const contact = gContacts.find(contact => contact._id === id)\r\n  contact.batteryStatus -= 10\r\n  return Promise.resolve()\r\n}\r\nfunction getById(id) {\r\n  const contact = gContacts.find(contact => contact._id === id)\r\n  return Promise.resolve({ ...contact })\r\n}\r\n\r\nfunction remove(id) {\r\n  const idx = gContacts.findIndex(contact => contact._id === id)\r\n  gContacts.splice(idx, 1)\r\n  if (!gContacts.length) gContacts = gDefaultContacts.slice()\r\n  storageService.store(STORAGE_KEY, gContacts)\r\n  return Promise.resolve()\r\n}\r\n\r\nfunction save(contactToSave) {\r\n  if (contactToSave._id) {\r\n    const idx = gContacts.findIndex(contact => contact._id === contactToSave._id)\r\n    gContacts.splice(idx, 1, contactToSave)\r\n  } else {\r\n    contactToSave._id = makeId()\r\n    contactToSave.batteryStatus = 100\r\n    gContacts.push(contactToSave)\r\n  }\r\n  storageService.store(STORAGE_KEY, gContacts)\r\n  return Promise.resolve(contactToSave);\r\n}\r\n\r\nfunction getEmptyContact() {\r\n  return {\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  }\r\n}\r\n\r\nfunction _loadContacts() {\r\n  let contacts = storageService.load(STORAGE_KEY)\r\n  if (!contacts || !contacts.length) contacts = gDefaultContacts\r\n  storageService.store(STORAGE_KEY, contacts)\r\n  return contacts\r\n}\r\n\r\n","\r\nexport function makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import contactService, {ContactService} from '../services/contactService' \r\nimport { contactService } from '../services/contactService2'\r\n\r\nexport default class ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContact()\r\n    }\r\n\r\n    loadContact = async () => {\r\n        const { id } = this.props.match.params\r\n        const contact = await contactService.getById(id)\r\n        this.setState({ contact })\r\n    }\r\n    // deleteContact = async (contactId) => {\r\n    deleteContact = async () => {\r\n        // console.log(contactId);\r\n        await contactService.remove(this.state.contact._id)\r\n        // this.loadContact\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    goBack = () =>{\r\n        this.props.history.push('/contact/')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state\r\n        if (!contact) return <div>wow I am loading</div>\r\n        return (\r\n            <div className=\"contact-details flex column \">\r\n                <button onClick={this.goBack}>Back</button>\r\n                <img src={'https://robohash.org/' + contact._id} alt=\"\" width=\"200\" height=\"200\" />\r\n                <div className=\"details\">\r\n                <p><b>Name: </b>{contact.name}</p>\r\n                <p><b>Phone: </b>{contact.phone}</p>\r\n                <p><b>Email: </b>{contact.email}</p>\r\n                </div>\r\n                {/* <p>{contact.name}</p> */}\r\n                <div className=\"buttons\">\r\n                <Link to={'/contact/edit/' + contact._id} >\r\n                    <button>Edit</button>\r\n                </Link>\r\n                <button onClick={this.deleteContact}>Delete</button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import  { Component } from 'react'\r\n\r\nexport  class ContactFilter extends Component {\r\n\r\n\r\n    handleChange =({target}) =>{\r\n        this.props.onChangeFilter(target.value)\r\n        console.log(target.value);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"contact-filter\">\r\n                <form className=\"simple-form\">\r\n                    <label htmlFor=\"text\">Search:</label>\r\n                    <input type=\"text\" id=\"text\" onChange={this.handleChange} />\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function ContactPreview({ contact, selectContact }) {\r\n    return (\r\n        // <div className=\"contact-preview\" onClick={() => selectContact(contact._id)}>\r\n        <Link to={'/contact/' + contact._id}>\r\n            <div className=\"contact-preview\">\r\n                {/* hello preview111111111 */}\r\n                <img src={'https://robohash.org/' + contact._id} alt=\"\" width=\"50\" height=\"50\" />\r\n                {contact.name}\r\n\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","// import React from 'react'\r\nimport { ContactPreview } from './ContactPreview'\r\n\r\nexport function ContactList({contacts , selectContact}) {\r\n    return (\r\n        <div className=\"contact-list simple-cards-grid\">\r\n      {contacts.map(contact => (\r\n        <ContactPreview  contact={contact} selectContact={selectContact} key={contact._id} />\r\n      ))}\r\n        </div>\r\n    )\r\n}\r\n","import { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { ContactFilter } from '../cmps/ContactFilter'\r\nimport {ContactList} from '../cmps/ContactList'\r\n// import contactService from '../services/contactService'\r\nimport {contactService} from '../services/contactService2'\r\n\r\nexport class ContactPage extends Component {\r\n    state={\r\n        contacts:[],\r\n        filterBy:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadContacts()\r\n    }\r\n\r\n    async loadContacts(){\r\n        const contacts = await contactService.query(this.state.filterBy)\r\n        // const contacts = await contactService.getContacts(this.state.filterBy)\r\n        this.setState({contacts})\r\n    }\r\n\r\n   onChangeFilter = (filterBy) => {\r\n       console.log('filterBy',filterBy);\r\n       this.setState({filterBy}, this.loadContacts)\r\n   }\r\n\r\n\r\n    render() {\r\n      const  {contacts} = this.state\r\n      const {selectContact} = this.props\r\n      if(!contacts) return <div>hi</div>\r\n        return (\r\n            <div className=\"contact-page\">\r\n                <ContactFilter onChangeFilter={this.onChangeFilter} />\r\n                <Link to={'/contact/edit'}>\r\n                <button>Add Contact</button>\r\n                </Link> \r\n                <ContactList contacts={contacts} selectContact={selectContact}/>\r\n                {/* {JSON.stringify(contacts, null, 2)} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport { storageService } from './storageService.js'\r\nimport { makeId } from './utilService.js'\r\n\r\nexport const bitcoinService = {\r\n  getRate,\r\n  getMarketPrice,\r\n  getConfirmedTransactions\r\n    \r\n}\r\n\r\nconst STORAGE_KEY = 'bitcoins'\r\n\r\n// var gBitcoins = _loadBitcoins()\r\n\r\n\r\nasync function getRate(){\r\n    try{\r\n        const res = await axios.get('https://blockchain.info/tobtc?currency=USD&value=1')\r\n        // console.log(res);\r\n        return res.data\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function getMarketPrice(){\r\n    try{\r\n        const res = await axios.get('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n        // console.log(res);\r\n        return res.data\r\n    }\r\n    catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n\r\nasync function getConfirmedTransactions() {\r\n    try {\r\n        const res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=5months&format=json&cors=true\r\n        `)\r\n        // console.log(res.data);\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import { storageService } from './storageService.js'\r\n\r\n// import { storageService } from './async-storage.service';\r\n// import { httpService } from './http.service';\r\n// import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser';\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getUsers,\r\n  getById,\r\n  remove,\r\n  update,\r\n  getLoggedinUser,\r\n};\r\n\r\nwindow.userService = userService;\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n// userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 100})\r\n\r\n\r\n\r\nfunction getUsers() {\r\n  // return storageService.query('user');\r\n  // return httpService.get(`user`)\r\n  return {\r\n    name:\"Avi Berger\",\r\n    coins:100,\r\n    moves:[],\r\n  }\r\n}\r\n\r\nasync function getById(userId) {\r\n  const user = await storageService.get('user', userId);\r\n  // const user = await httpService.get(`user/${userId}`)\r\n  gWatchedUser = user;\r\n  return user;\r\n}\r\nfunction remove(userId) {\r\n  return storageService.remove('user', userId);\r\n  // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n  await storageService.put('user', user);\r\n  // user = await httpService.put(`user/${user._id}`, user)\r\n  // Handle case in which admin updates other user's details\r\n  if (getLoggedinUser()._id === user._id) _saveLocalUser(user);\r\n  return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n  const users = await storageService.query('user'); //CLIENT STORAGE\r\n  const user = users.find((user) => user.username === userCred.username); //CLIENT STORAGE\r\n  return _saveLocalUser(user); //CLIENT STORAGE\r\n  \r\n  // const user = await httpService.post('auth/login', userCred) //SERVER STORAGE\r\n  // socketService.emit('login', user._id); //SERVER STORAGE\r\n  // if (user) return _saveLocalUser(user); //SERVER STORAGE\r\n}\r\nasync function signup(userCred) {\r\n  const user = await storageService.post('user', userCred); //CLIENT STORAGE\r\n  // const user = await httpService.post('auth/signup', userCred)  //SERVER STORAGE\r\n  // socketService.emit('set-user-socket', user._id); //SERVER STORAGE\r\n  console.log('just signed up', user);\r\n  const users = await getUsers();\r\n  console.log('users', users);\r\n  return _saveLocalUser(user);\r\n}\r\nasync function logout() {\r\n  sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER); \r\n  // socketService.emit('unset-user-socket'); //SERVER STORAGE\r\n  // return await httpService.post('auth/logout') //SERVER STORAGE\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n  sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user));\r\n  return user;\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n  if (!sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER)) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, 'null');\r\n  }\r\n  return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER));\r\n}\r\n\r\n// // This IIFE functions for Dev purposes\r\n// // It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//   var user = getLoggedinUser();\r\n//   // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//   // Here we are listening to changes for the watched user (comming from other browsers)\r\n//   window.addEventListener('storage', async () => {\r\n//     if (!gWatchedUser) return;\r\n//     const freshUsers = await storageService.query('user');\r\n//     const watchedUser = freshUsers.find((u) => u._id === gWatchedUser._id);\r\n//     if (!watchedUser) return;\r\n//     if (gWatchedUser.score !== watchedUser.score) {\r\n//       console.log(\r\n//         'Watched user score changed - localStorage updated from another browser'\r\n//       );\r\n//       socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser);\r\n//     }\r\n//     gWatchedUser = watchedUser;\r\n//   });\r\n// })();\r\n\r\n// // This is relevant when backend is connected\r\n// (async () => {\r\n//   var user = getLoggedinUser();\r\n//   if (user) socketService.emit('set-user-socket', user._id);\r\n// })();\r\n","import { Component } from 'react'\r\nimport { bitcoinService } from '../services/bitcoinService'\r\nimport { userService } from '../services/userService'\r\n\r\nexport class HomePage extends Component {\r\n    state = {\r\n        user: {\r\n            name: 'haha'\r\n        },\r\n        bitcoinRate: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser()\r\n        this.getBitcoinRate()\r\n    }\r\n\r\n    loadUser = async () => {\r\n        const user = await userService.getUsers()\r\n        this.setState({user})\r\n    }\r\n\r\n    getBitcoinRate = async () => {\r\n        const bitcoinRate = await bitcoinService.getRate()\r\n        this.setState({bitcoinRate})\r\n    }\r\n\r\n    render() {\r\n        const { user, bitcoinRate } = this.state\r\n        if (!bitcoinRate) return (<div>lodaing</div>)\r\n        return (\r\n            <div className=\"home-page flex column justify-center\">\r\n                <h1>Hello {user.name} !</h1>\r\n                \r\n                    <div>Coins: {user.coins}</div>\r\n                    <div>BTC: {bitcoinRate}</div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport { bitcoinService } from '../services/bitcoinService'\r\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\r\n\r\nexport class StatisticPage extends Component {\r\n\r\n    state = {\r\n        marketPrice: null,\r\n        confirmedTransactions: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadMarketPrice()\r\n        this.loadConfirmTransactions()\r\n    }\r\n\r\n    loadMarketPrice = async () => {\r\n        const marketPrice = await bitcoinService.getMarketPrice()\r\n        this.setState({ marketPrice })\r\n    }\r\n\r\n    loadConfirmTransactions = async () => {\r\n        const confirmTransactions = await bitcoinService.getConfirmedTransactions()\r\n        this.setState({ confirmTransactions })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { marketPrice, confirmTransactions } = this.state\r\n        if (!marketPrice || !confirmTransactions) return <div>loading</div>\r\n        return (\r\n            <div className=\"flex column\" style={{width:'100%'}}>\r\n                <h1>statistics!</h1>\r\n                <div>\r\n                    <h3>Market Price</h3>\r\n\r\n                    <Sparklines data={marketPrice.values.map(value => value.y)}\r\n                      margin={10}>\r\n                        <SparklinesLine color=\"blue\"  style={{strokeWidth:\".5\", fill:\"none\"}} />\r\n                    </Sparklines>\r\n\r\n                </div>\r\n                {/* {JSON.stringify(marketPrice.values)} */}\r\n\r\n\r\n                <div>\r\n                    <h3>Confirm Transactions</h3>\r\n\r\n                    <Sparklines data={confirmTransactions.values.map(value => value.y)}\r\n                        margin={10}>\r\n                        <SparklinesLine color=\"red\" style={{strokeWidth:\".5\", }}/>\r\n                    </Sparklines>\r\n\r\n                </div>\r\n                {/* {JSON.stringify(confirmTransactions.values)} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport { contactService } from '../services/contactService2'\r\n\r\nexport class ContactEditPage extends Component {\r\n\r\n    state = {\r\n        contact : null,\r\n    }\r\n\r\nasync componentDidMount() {\r\n    try{\r\n        const id = this.props.match.params.id\r\n        const contact = id ? await contactService.getById(id) : contactService.getEmptyContact()\r\n        this.setState({contact})\r\n    } catch (err) {\r\n        \r\n    }\r\n}\r\nonSaveRobot = async() => {\r\n    const {contact} = this.state\r\n    await contactService.save(contact)\r\n    this.props.history.push('/contact/'+contact._id)\r\n}\r\n\r\nhandleChange = ({target}) => {\r\n    const field = target.name\r\n    const value = target.value\r\n    this.setState(prevState => ({contact: { ...prevState.contact, [field]:value}}))\r\n}\r\n\r\n    render() {\r\n    if (!this.state.contact) return <div>{  'Lodaing...' }</div>\r\n        const {name,email,phone} = this.state.contact\r\n        return (\r\n            <form className=\"contact-edit\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input ref={this.inputRef} value={name} name=\"name\" type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input value={email} name=\"email\" type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n\r\n                <label htmlFor=\"phone\">Phone number</label>\r\n                <input value={phone} name=\"phone\" type=\"text\" id=\"phone\" onChange={this.handleChange} />\r\n\r\n                <button onClick={this.onSaveRobot}>Save</button>\r\n\r\n                {/* <p>{this.state.errMsg}</p> */}\r\n            </form>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import { HashRouter as Router, Redirect, Route , Switch } from 'react-router-dom'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { Component } from 'react'\r\nimport ContactDetailsPage from './ContactDetailsPage'\r\nimport { ContactPage } from './ContactPage'\r\nimport { HomePage } from './HomePage'\r\nimport { StatisticPage } from './StatisticPage'\r\nimport { ContactEditPage } from './ContactEditPage'\r\n// import { RobotList } from '../cmps/RobotList'\r\n// import { RobotDetails } from './RobotDetails'\r\n// import { robotService } from '../services/robotService'\r\n// import { RobotFilter } from '../cmps/RobotFilter'\r\n\r\nexport class BitcoinApp extends Component {\r\n  state = {\r\n    robots: null,\r\n    filterBy: null,\r\n    selectedContactId: null,\r\n    page: 'home'\r\n    // selectedContactId: '5a56640269f443a5d64b32ca'\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.loadRobots()\r\n  }\r\n\r\n  selectContact = (contactId) => {\r\n    this.setState({ selectedContactId: contactId })\r\n  }\r\n\r\n  gotoPage = (page) => {\r\n    this.setState({ page: page, selectedContactId:null })\r\n  }\r\n\r\n\r\n  // async loadRobots() {\r\n  //   const robots = await robotService.query(this.state.filterBy)\r\n  //   this.setState({ robots })\r\n  // }\r\n\r\n  // selectRobot = (robotId) => {\r\n  //   this.setState({ selectedRobotId: robotId })\r\n  // }\r\n  // onChangeFilter = (filterBy) => {\r\n  //   this.setState({ filterBy }, this.loadRobots)\r\n  // }\r\n\r\n  // deleteRobot = async (robotId) => {\r\n  //   await robotService.remove(robotId)\r\n  //   this.loadRobots()\r\n  // }\r\n\r\n  render() {\r\n    const { selectedContactId ,page } = this.state\r\n    // console.log(this.selectContact);\r\n\r\n    // if (!robots) return <div className=\"page-loading-screen\">Loading...</div>\r\n\r\n    return (\r\n      <Router>\r\n            <AppHeader />\r\n          <main   className=\"main-layout flex column align-center\" >\r\n            <Switch>\r\n              <Route path=\"/stats\" component={StatisticPage}></Route>\r\n              <Route path=\"/contact/edit/:id?\" component={ContactEditPage} />\r\n              <Route path=\"/contact/:id\" component={ContactDetailsPage} />\r\n              <Route path=\"/contact\" component={ContactPage}></Route>\r\n              <Route path=\"/\" component={HomePage}></Route>\r\n            </Switch>\r\n\r\n          </main>\r\n\r\n\r\n     </Router>\r\n\r\n      /* <div className=\"flex column app-container\">\r\n        <h1>Mister Bitcoin</h1>\r\n        <nav>\r\n        <a onClick={() => { this.gotoPage('home') }} href=\"#\"> Home</a> |\r\n        <a onClick={() => { this.gotoPage('contactList') }} href=\"#\"> Contacts</a> |\r\n        <a onClick={() => { this.gotoPage('statistics') }} href=\"#\"> Statistics</a> |\r\n\r\n        \r\n        </nav>\r\n\r\n        <main className=\"main-layout\">\r\n        {page === 'home' && <HomePage />}\r\n        {page === 'contactList' && (selectedContactId ? <ContactDetailsPage contactId={selectedContactId} /> : <ContactPage selectContact={this.selectContact} />)}\r\n        {page === 'statistics' && <StatisticPage />}\r\n\r\n        </main>\r\n      </div> */\r\n    )\r\n  }\r\n}\r\n","import { BitcoinApp } from './pages/BitcoinApp';\n\nexport default function App() {\n  return (\n    <main  className=\"app-container flex column\" >\n      <BitcoinApp/>\n    </main>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/global.scss'\n\n// import './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}